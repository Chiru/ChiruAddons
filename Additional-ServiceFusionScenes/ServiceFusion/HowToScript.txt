Service Fusion Scripting
========================

- Create a new script file for your purposes and add it to the scene,
  an example script could look something like this:

  var dummyVc = new VisualContainer(null);
  var dummyContainer = C3DUiModule.ContainerFactory().CreateContainer(dummyVc);

  var script = new Script();

  script.Invoked.connect(RunScript);

  dummyContainer.eventManager.RegisterScript(new Tag("test", "test"), script);

  function RunScript(tag, rdfStore)
  {
      console.LogInfo("This is a test script!:");
      console.LogInfo("Tag type: " + tag.type);
      console.LogInfo("Tag data: " + tag.data);
      console.LogInfo("RDF store: " + rdfStore);
  }

- When something invokes the Tag("test", "test"), a drag-and-drop event f.ex., the RunScript function is called.
- Note: if the VisualContainer is not added to your entity's GraphicsViewCanvas component, you must handle the drop
  event by yourself:

    ui.GraphicsView().DropEvent.connect(function (e)
    {
        var data = e.mimeData().data("application/x-hotspot").toString();
        if (data.length > 0)
        {
            // Include Utils.js for MouseRay function
            var ray = MouseRay(input.MousePos().x(), input.MousePos().y());
            var r = scene.ogre.Raycast(ray, -1);
            if (r.entity && r.entity.id == me.id)
                dummyContainer.visual.HandleMeshDrop(e.source());
        }
    });

- See TestScript.js for more examples
- If using GraphicsViewCanvas component in your entity, rememer to have Screen.js script present in the entity also
